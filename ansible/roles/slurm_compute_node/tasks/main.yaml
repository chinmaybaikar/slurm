- name: Mount /scratch/local
  ansible.builtin.import_role:
    name: raid0
  vars:
    raid0_mount_path: /scratch/local
  when: (disk_count | int) > 0

- name: Mount /scratch/shared
  ansible.posix.mount:
    src: "{{ hostvars['slurm-nfs-node-0'].ansible_fqdn }}:/scratch/shared"
    path: /scratch/shared
    opts: rw,sync,soft
    state: mounted
    fstype: nfs
  when: "{{ (hostvars['slurm-nfs-node-0'].disk_count | int) > 0 }}"

- name: Install slurm
  ansible.builtin.apt:
    name:
      - slurmd
      - slurm-client
    state: latest
    update_cache: yes
- name: Create slurmd.service.d directory
  ansible.builtin.file:
    path: /etc/systemd/system/slurmd.service.d
    state: directory
    owner: root
    group: root
    mode: '0755'
- name: Install override.conf
  ansible.builtin.template:
    src: override.conf
    dest: /etc/systemd/system/slurmd.service.d/override.conf
    owner: root
    group: root
    mode: '0755'
- name: Copy prolog.sh
  ansible.builtin.copy:
    src: prolog.sh
    dest: /etc/slurm/prolog.sh
    owner: root
    group: root
    mode: '0755'
- name: Copy epilog.sh
  ansible.builtin.copy:
    src: epilog.sh
    dest: /etc/slurm/epilog.sh
    owner: root
    group: root
    mode: '0755'
- name: Install enroot
  tags: enroot
  ansible.builtin.import_role:
    name: nvidia.enroot
  vars:
    enroot_version: "3.4.1"
- name: Install pyxis
  tags: pyxis
  ansible.builtin.import_role:
    name: pyxis
- name: Restart slurmd
  ansible.builtin.systemd_service:
    name: slurmd
    state: restarted
    enabled: true
    daemon_reload: true
